type Mutation {
  pollAddVote(optionId: ID!): Poll
}

type Query {
  pollGet(id: ID!): Poll
  pollList(limit: Int, nextToken: String): PollConnection
  pollGetOptions(pollId: ID!, first: Int, after: String): PollOptionConnection
}

type Subscription {
  pollAddedVote: Poll @aws_subscribe(mutations: ["pollAddVote"])
}

type PollVote {
  id: ID!
  pollId: ID!
  optionId: ID!
  createdOn: AWSDateTime
}

type PollVoteConnection {
  items: [PollVote!]!
  nextToken: String
}

type PollOption {
  id: ID!
  pollId: ID!
  text: String!
  votes: Int
}

type PollOptionConnection {
  items: [PollOption!]!
  nextToken: String
}

type Poll implements Node {
  id: ID!
  question: String!
  isOpen: Boolean!
  createdOn(format: String): String
  lastUpdated: AWSDateTime
  totalVotes: Int
  options: [PollOption]
}

type PollConnection {
  items: [Poll!]!
  nextToken: String
}
