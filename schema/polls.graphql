type Mutation {
  pollAddVote(optionId: ID!): Poll
}

type Query {
  pollGet(id: ID!): Poll
  pollList(limit: Int, nextToken: String): PollConnection
  pollGetOptions(pollId: ID!, first: Int, after: String): PollOptionConnection
}

type Subscription {
  pollAddedVote: Poll @aws_subscribe(mutations: ["pollAddVote"])
}

"""
Poll Option Resource
"""
type PollOption {
  id: ID!
  pollId: ID!
  text: String!
  votes: Int
}

"""
Poll Option Paginiation
"""
type PollOptionConnection {
  items: [PollOption!]!
  nextToken: String
}

"""
Poll Resource
"""
type Poll implements Node {
  id: ID!
  question: String!
  isOpen: Boolean!
  createdOn(format: String): String
  lastUpdated: String
  totalVotes: Int
  options: [PollOption!]
  """
  Query if user has voted on Poll, if so return voted option
  """
  hasVoted(userId: ID!): PollOption
}

"""
Poll Pagination
"""
type PollConnection {
  items: [Poll!]!
  nextToken: String
}
