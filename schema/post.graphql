type Query {
  userGet(id: ID!): User
  authorGet(id: ID!): Author
  authorList(limit: Int, nextToken: String): AuthorConnection
  postGet(id: ID!): Post
}

"""
User Resource
"""
type User implements Node {
  id: ID!
}

"""
Author Resource
"""
type Author implements Node {
  id: ID!
  user: User
  profileImage: Media
  posts: [Article!]
  title: String!
  bio: String
  staffYear: Int
  gradeYear: Int
}

"""
Author Resource Pagination
"""
type AuthorConnection {
  items: [Author!]!
  nextToken: String
}

"""
Interface for Post Resources
"""
interface Post {
  author: Author
  createdOn(format: String): String
  lastUpdated: String
}
