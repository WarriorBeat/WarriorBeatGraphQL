type Query {
  userGet(id: ID!): User
  authorGet(id: ID!): Author
  authorList(limit: Int, nextToken: String): AuthorConnection
  postGet(id: ID!): Post
}

type Mutation {
  userCreate(input: UserInput!): User
  authorCreate(input: AuthorInput!): Author
  authorUpdate(id: ID!, expectedVersion: Int!, input: AuthorInput!): Author
}

"""
User Resource
"""
type User implements Node {
  id: ID!
  username: String
}

"""
User Resource Input
"""
input UserInput {
  id: ID!
  username: String
}

"""
Author Resource
"""
type Author implements Node {
  id: ID!
  user: User!
  name: String
  profileImage: Media
  posts: [Article!]
  title: String
  roles: [String!]
  bio: String
  staffYear: Int
  gradeYear: Int
  version: Int
}

"""
Author Resource Pagination
"""
type AuthorConnection {
  items: [Author!]!
  nextToken: String
}

"""
Author Resource Input
"""
input AuthorInput {
  user: ID
  name: String
  profileImage: ID
  posts: [ID!]
  roles: [String!]
  bio: String
  staffYear: Int
  gradeYear: Int
}

"""
Interface for Post Resources
"""
interface Post {
  author: Author
  createdOn(format: String): String
  lastUpdated: String
}

"""
Input for pagination sorting
"""
input SortOrderInput {
  key: String!
  values: [String!]!
}
