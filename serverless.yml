service: warriorbeat-graphql

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: us-east-1

plugins:
  - serverless-python-requirements
  - serverless-appsync-plugin
  - serverless-dynamodb-local
  - serverless-appsync-offline
  - serverless-offline
  - aws-amplify-serverless-plugin

custom:
  accountId: '881433986874'
  # Python Runtime
  pythonRequirements:
    dockerizePip: true
    slim: true
    useDownloadCache: true
    useStaticCache: true
    zip: true
  # END PYTHON RUNTIME ===================

  # SLS Dev Env
  appsync-offline:
    port: 62222
    dynamodb:
      client:
        endpoint: 'http://localhost:8000'
        region: localhost
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      test:
        sources:
          - table: Polls
            sources: [seed-data/polls.json]
          - table: PollOptions
            sources: [seed-data/poll_options.json]
          - table: PollVotes
            sources: [seed-data/poll_votes.json]
  # END SLS DEV ENV ===================

  # AWS Amplify ===================
  amplify:
    - filename: amplify/aws-exports.js
      type: javascript
  # END AWS Amplify ===================

  # AppSync ===================
  appSync:
    name: WarriorBeatAppSync
    authenticationType: API_KEY
    schema:
      - schema/base.graphql
      - schema/polls.graphql
    mappingTemplates:
      - ${file(mapping-templates/polls/map.yml)}
    functionConfigurations:
      - ${file(mapping-templates/functions/polls.yml)}
    serviceRole: 'AppSyncServiceRole'
    dataSources:
      - ${file(schema/data/LambdaResolver.yml)}
      - ${file(schema/data/polls.yml)}
      - ${file(schema/data/none.yml)}

  # END AppSync ===================

resources:
  # AppSync Service/Handler Roles
  - ${file(resources/appsync-roles.yml)}
  # DynamoDB: Polls
  - ${file(resources/tables/polls.yml)}

package:
  exclude:
    - .git/**
    - .amplify/**
    - .seed-data/**
    - node_modules/**

functions:
  lambda_handler:
    handler: handler.lambda_handler
    role: 'AppSyncHandler'
