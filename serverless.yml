service: warriorbeat-graphql

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: us-east-1

plugins:
  - serverless-python-requirements
  - serverless-appsync-plugin
  - serverless-dynamodb-local
  - serverless-appsync-offline
  - serverless-offline
  - aws-amplify-serverless-plugin

custom:
  accountId: '881433986874'
  # Python Runtime
  pythonRequirements:
    dockerizePip: true
    slim: true
    useDownloadCache: true
    useStaticCache: true
    zip: true
  # END PYTHON RUNTIME ===================

  # SLS Dev Env
  appsync-offline:
    port: 62222
    dynamodb:
      client:
        endpoint: 'http://localhost:8000'
        region: localhost
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      test:
        sources:
          - table: Polls
            sources: [seed-data/polls.json]
          - table: PollOptions
            sources: [seed-data/poll_options.json]
          - table: PollVotes
            sources: [seed-data/poll_votes.json]
  # END SLS DEV ENV ===================

  # AWS Amplify ===================
  amplify:
    - filename: amplify/aws-exports.js
      type: javascript
  # END AWS Amplify ===================

  # AppSync ===================
  appSync:
    name: WarriorBeatAppSync
    authenticationType: API_KEY
    schema:
      - schema/base.graphql
      - schema/polls.graphql
    mappingTemplates:
      - ${file(mapping-templates/polls/map.yml)}
    functionConfigurations:
      - ${file(mapping-templates/functions/polls.yml)}
    serviceRole: 'AppSyncServiceRole'
    dataSources:
      - ${file(schema/data/LambdaResolver.yml)}
      - ${file(schema/data/polls.yml)}
      - ${file(schema/data/none.yml)}

  # END AppSync ===================

resources:
  Resources:
    AppSyncHandler:
      Type: 'AWS::IAM::Role'
      Properties:
        RoleName: 'Lambda-AppSyncHandler'
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: 'Allow'
              Principal:
                Service:
                  - 'lambda.amazonaws.com'
              Action:
                - 'sts:AssumeRole'
        Policies:
          - PolicyName: 'LambdaRole-Policy'
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: 'Allow'
                  Action:
                    - 'logs:CreateLogStream'
                    - 'logs:PutLogEvents'
                  Resource:
                    - 'arn:aws:logs:us-east-1:881433986874:log-group:/aws/lambda/warriorbeat-graphql-dev-lambda_handler:*'
                    - 'arn:aws:logs:us-east-1:881433986874:log-group:/aws/lambda/warriorbeat-graphql-dev-lambda_handler:*:*'
          - PolicyName: 'LambdaRole-DynamoDB-Policy'
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: 'Allow'
                  Action:
                    - 'dynamodb:Query'
                    - 'dynamodb:Scan'
                    - 'dynamodb:UpdateItem'
                    - 'dynamodb:DeleteItem'
                    - 'dynamodb:PutItem'
                    - 'dynamodb:GetItem'
                  Resource:
                    - 'arn:aws:dynamodb:${self:provider.region}:*:table/Polls'
                    - 'arn:aws:dynamodb:${self:provider.region}:*:table/Polls/*'
                    - 'arn:aws:dynamodb:${self:provider.region}:*:table/PollOptions'
                    - 'arn:aws:dynamodb:${self:provider.region}:*:table/PollOptions/*'
                    - 'arn:aws:dynamodb:${self:provider.region}:*:table/PollVotes'
                    - 'arn:aws:dynamodb:${self:provider.region}:*:table/PollVotes/*'
    AppSyncServiceRole:
      Type: 'AWS::IAM::Role'
      Properties:
        RoleName: 'Lambda-AppSyncServiceRole'
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: 'Allow'
              Principal:
                Service:
                  - 'appsync.amazonaws.com'
              Action:
                - 'sts:AssumeRole'
        Policies:
          - PolicyName: 'Lambda-AppSyncServiceRole-Policy'
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: 'Allow'
                  Action:
                    - 'lambda:invokeFunction'
                  Resource:
                    - 'arn:aws:lambda:${self:provider.region}:*:function:warriorbeat-graphql-dev-lambda_handler'
                    - 'arn:aws:lambda:${self:provider.region}:*:function:warriorbeat-graphql-dev-lambda_handler:*'
    PollTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'Polls'
    PollOptionsTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: pollId
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: pollId
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'PollOptions'
        GlobalSecondaryIndexes:
          - IndexName: pollId-index
            KeySchema:
              - AttributeName: pollId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    PollVotesTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: optionId
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: optionId
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'PollVotes'
        GlobalSecondaryIndexes:
          - IndexName: optionId-index
            KeySchema:
              - AttributeName: optionId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

package:
  exclude:
    - .git/**
    - .amplify/**
    - .seed-data/**
    - node_modules/**

functions:
  lambda_handler:
    handler: handler.lambda_handler
    role: 'AppSyncHandler'
